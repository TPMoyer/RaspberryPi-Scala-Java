#**** include log4j properties **************************************

# notes:
#  The log level lower bound set here takes precedence over programatic log.setLevel 
#  The $ variables are set prior to the instancing of the logger

# Root logger option
# On Spark apps, change this to WARN as Spark is very verbose at INFO level, 
log4j.rootLogger=DEBUG,fileout0,fileout1

# Direct log messages to a file, not to console
# Output to console can be independently controlled with println. 
# Log a copy of the log messages to a fid (File IDentifier) who's name does not change run-to-run.
# This is convenient for editors which auto-update their display when the underlying file changes.
# Sublime text is one such editor.
log4j.appender.fileout1=org.apache.log4j.FileAppender
log4j.appender.fileout1.File=c:/logs/${invariantLogFileName}.log
log4j.appender.fileout1.ImmediateFlush=true
log4j.appender.fileout1.Threshold=debug
log4j.appender.fileout1.Append=false
log4j.appender.fileout1.layout=org.apache.log4j.PatternLayout
# Slow/Expensive, but high value tracing of source object and row numbers.
# Second column is number of miliseconds post app start
log4j.appender.fileout1.layout.conversionPattern=%-5p %8r %3L %c{1} - %m%n

# Direct log messages to file with dateTime in fid
log4j.appender.fileout0=org.apache.log4j.FileAppender
log4j.appender.fileout0.File=c:/logs/${uniquePerRunLogFileName}.log
log4j.appender.fileout0.ImmediateFlush=true
log4j.appender.fileout0.Threshold=debug    
log4j.appender.fileout0.Append=false
log4j.appender.fileout0.layout=org.apache.log4j.PatternLayout
log4j.appender.fileout0.layout.conversionPattern=%-5p %8r %3L %c{1} - %m%n
# An alternate set of delimiters is to eliminate the timestamps.
# This allows editor file-compare to have many identical rows, one run to another
#log4j.appender.fileout0.layout.conversionPattern=%-5p %03L %c{1} - %m%n


# Turn on DEBUG logging in com.amazonaws.request to log a summary of requests/responses with AWS request IDs
#log4j.logger.com.amazonaws.request=DEBUG
#log4j.logger.com.amazonaws=WARN

# Log all HTTP content (headers, parameters, content, etc)  for
# all requests and responses. Use caution with this since it can
# be very expensive to log such verbose data!
#log4j.logger.org.apache.http.wire=DEBUG