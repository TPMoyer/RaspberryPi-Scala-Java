# General: Properties file to provide a substantial number of control parameteres to an app,
# thus limiting the number of CLI arguments needed.
#
#
# Per the typesafe configuration standards: if a key exists on multiple rows
# the key=value pair on the last uncommented row for that key, will determine the
# value used
#
# For windows you have two choices:
# or if you really want to use \  it will need to be escaped. ie use double \\ between directories
# The simpler option is to just use the linux / 
#
# A note on line endings.   You need to set your editor to have the linux line ending (single character)
# instead of the windows cr lf  pair
#  If you do not have this set for linux, when a script reads the .properties file andy blank line will error
# , and in reporting same, will execute the carridge return.
#
# what it will try to say is
# ./z_scallaApp_Template.sh: 23: ./z_ScalaApp_Template.properties: CHARACTER 13: not found
#
# what it does say is:
#: not foundApp_Template.sh: 23: ./z_ScalaApp_Template.properties:
#notice how the carridge return (character 13 WAS executed): the cursor went back to the beginnig of the line


jarFid=Rpi_Scala_Java
package=apps
class=ToolControlApp




#***********************************************************************************
# default behavior is to log the properties derived from this file.   
# Uncomment the following line if you want the log file to omit these
#suppressLoggingTheseProperties=true

# default behavior is to supperss the logging of the Environment properties
# Uncomment the following line if you want the log file to contain these
#suppressLoggingEnvironmentProperties=false

# default behavior is to supperss the logging of the System properties
# Uncomment the following line if you want the log file to contain these
#suppressLoggingSystemProperties=false
#*********************************************************************************